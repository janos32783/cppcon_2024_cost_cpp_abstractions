#pragma once

#include <cstdint>
#include <concepts>

namespace hal {
namespace rcc {

// RCC register base addresses
constexpr std::uint32_t RCC_BASE_ADDR = UINT32_C(0x40021000);

template <std::uint32_t rcc_base_addr>
concept is_valid_base_address = (
    (rcc_base_addr == RCC_BASE_ADDR)
);
constexpr std::uint32_t RCC_CR_OFFSET           = UINT32_C(0x0);
constexpr std::uint32_t RCC_CFGR_OFFSET         = UINT32_C(0x4);
constexpr std::uint32_t RCC_CIR_OFFSET          = UINT32_C(0x8);
constexpr std::uint32_t RCC_APB2RSTR_OFFSET     = UINT32_C(0xC);
constexpr std::uint32_t RCC_APB1RSTR_OFFSET     = UINT32_C(0x10);
constexpr std::uint32_t RCC_AHBENR_OFFSET       = UINT32_C(0x14);
constexpr std::uint32_t RCC_APB2ENR_OFFSET      = UINT32_C(0x18);
constexpr std::uint32_t RCC_APB1ENR_OFFSET      = UINT32_C(0x1C);
constexpr std::uint32_t RCC_BDCR_OFFSET         = UINT32_C(0x20);
constexpr std::uint32_t RCC_CSR_OFFSET          = UINT32_C(0x24);
constexpr std::uint32_t RCC_AHBRSTR_OFFSET      = UINT32_C(0x28);
constexpr std::uint32_t RCC_CFGR2_OFFSET        = UINT32_C(0x2C);
constexpr std::uint32_t RCC_CFGR3_OFFSET        = UINT32_C(0x30);
constexpr std::uint32_t RCC_CR2_OFFSET          = UINT32_C(0x34);

// Clock control register
constexpr std::uint32_t RCC_CR_HSION_MSK      = UINT32_C(0b00000000000000000000000000000001);
constexpr std::uint32_t RCC_CR_HSION_POS      = UINT32_C(0);
constexpr std::uint32_t RCC_CR_HSIRDY_MSK     = UINT32_C(0b00000000000000000000000000000010);
constexpr std::uint32_t RCC_CR_HSIRDY_POS     = UINT32_C(1);
constexpr std::uint32_t RCC_CR_HSITRIM_MSK    = UINT32_C(0b00000000000000000000000011111000);
constexpr std::uint32_t RCC_CR_HSITRIM_POS    = UINT32_C(3);
constexpr std::uint32_t RCC_CR_HSICAL_MSK     = UINT32_C(0b00000000000000001111111100000000);
constexpr std::uint32_t RCC_CR_HSICAL_POS     = UINT32_C(8);
constexpr std::uint32_t RCC_CR_HSEON_MSK      = UINT32_C(0b00000000000000010000000000000000);
constexpr std::uint32_t RCC_CR_HSEON_POS      = UINT32_C(16);
constexpr std::uint32_t RCC_CR_HSERDY_MSK     = UINT32_C(0b00000000000000100000000000000000);
constexpr std::uint32_t RCC_CR_HSERDY_POS     = UINT32_C(17);
constexpr std::uint32_t RCC_CR_HSEBYP_MSK     = UINT32_C(0b00000000000001000000000000000000);
constexpr std::uint32_t RCC_CR_HSEBYP_POS     = UINT32_C(18);
constexpr std::uint32_t RCC_CR_CSSON_MSK      = UINT32_C(0b00000000000010000000000000000000);
constexpr std::uint32_t RCC_CR_CSSON_POS      = UINT32_C(19);
constexpr std::uint32_t RCC_CR_PLLON_MSK      = UINT32_C(0b00000001000000000000000000000000);
constexpr std::uint32_t RCC_CR_PLLON_POS      = UINT32_C(24);
constexpr std::uint32_t RCC_CR_PLLRDY_MSK     = UINT32_C(0b00000010000000000000000000000000);
constexpr std::uint32_t RCC_CR_PLLRDY_POS     = UINT32_C(25);
// Clock configuration register (RCC_CFGR)
constexpr std::uint32_t RCC_CFGR_SW_MSK         = UINT32_C(0b00000000000000000000000000000011);
constexpr std::uint32_t RCC_CFGR_SW_POS         = UINT32_C(0);
constexpr std::uint32_t RCC_CFGR_SWS_MSK        = UINT32_C(0b00000000000000000000000000001100);
constexpr std::uint32_t RCC_CFGR_SWS_POS        = UINT32_C(2);
constexpr std::uint32_t RCC_CFGR_HPRE_MSK       = UINT32_C(0b00000000000000000000000011110000);
constexpr std::uint32_t RCC_CFGR_HPRE_POS       = UINT32_C(4);
constexpr std::uint32_t RCC_CFGR_PPRE_MSK       = UINT32_C(0b00000000000000000000011100000000);
constexpr std::uint32_t RCC_CFGR_PPRE_POS       = UINT32_C(8);
constexpr std::uint32_t RCC_CFGR_ADCPRE_MSK     = UINT32_C(0b00000000000000000100000000000000);
constexpr std::uint32_t RCC_CFGR_ADCPRE_POS     = UINT32_C(14);
constexpr std::uint32_t RCC_CFGR_PLLSRC_MSK     = UINT32_C(0b00000000000000011000000000000000);
constexpr std::uint32_t RCC_CFGR_PLLSRC_POS     = UINT32_C(15);
constexpr std::uint32_t RCC_CFGR_PLLXTPRE_MSK   = UINT32_C(0b00000000000000100000000000000000);
constexpr std::uint32_t RCC_CFGR_PLLXTPRE_POS   = UINT32_C(17);
constexpr std::uint32_t RCC_CFGR_PLLMUL_MSK     = UINT32_C(0b00000000001111000000000000000000);
constexpr std::uint32_t RCC_CFGR_PLLMUL_POS     = UINT32_C(18);
constexpr std::uint32_t RCC_CFGR_MCO_MSK        = UINT32_C(0b00000111000000000000000000000000);
constexpr std::uint32_t RCC_CFGR_MCO_POS        = UINT32_C(24);
constexpr std::uint32_t RCC_CFGR_MCOPRE_MSK     = UINT32_C(0b01110000000000000000000000000000);
constexpr std::uint32_t RCC_CFGR_MCOPRE_POS     = UINT32_C(28);
constexpr std::uint32_t RCC_CFGR_PLLNODIV_MSK   = UINT32_C(0b10000000000000000000000000000000);
constexpr std::uint32_t RCC_CFGR_PLLNODIV_POS   = UINT32_C(31);
// Clock interrupt register (RCC_CIR)
constexpr std::uint32_t RCC_CIR_LSIRDYF_MSK    = UINT32_C(0b00000000000000000000000000000001);
constexpr std::uint32_t RCC_CIR_LSIRDYF_POS    = UINT32_C(0);
constexpr std::uint32_t RCC_CIR_LSERDYF_MSK    = UINT32_C(0b00000000000000000000000000000010);
constexpr std::uint32_t RCC_CIR_LSERDYF_POS    = UINT32_C(1);
constexpr std::uint32_t RCC_CIR_HSIRDYF_MSK    = UINT32_C(0b00000000000000000000000000000100);
constexpr std::uint32_t RCC_CIR_HSIRDYF_POS    = UINT32_C(2);
constexpr std::uint32_t RCC_CIR_HSERDYF_MSK    = UINT32_C(0b00000000000000000000000000001000);
constexpr std::uint32_t RCC_CIR_HSERDYF_POS    = UINT32_C(3);
constexpr std::uint32_t RCC_CIR_PLLRDYF_MSK    = UINT32_C(0b00000000000000000000000000010000);
constexpr std::uint32_t RCC_CIR_PLLRDYF_POS    = UINT32_C(4);
constexpr std::uint32_t RCC_CIR_HSI14RDYF_MSK  = UINT32_C(0b00000000000000000000000000100000);
constexpr std::uint32_t RCC_CIR_HSI14RDYF_POS  = UINT32_C(5);
constexpr std::uint32_t RCC_CIR_HSI48RDYF_MSK  = UINT32_C(0b00000000000000000000000001000000);
constexpr std::uint32_t RCC_CIR_HSI48RDYF_POS  = UINT32_C(6);
constexpr std::uint32_t RCC_CIR_CSSF_MSK       = UINT32_C(0b00000000000000000000000010000000);
constexpr std::uint32_t RCC_CIR_CSSF_POS       = UINT32_C(7);
constexpr std::uint32_t RCC_CIR_LSIRDYIE_MSK   = UINT32_C(0b00000000000000000000000100000000);
constexpr std::uint32_t RCC_CIR_LSIRDYIE_POS   = UINT32_C(8);
constexpr std::uint32_t RCC_CIR_LSERDYIE_MSK   = UINT32_C(0b00000000000000000000001000000000);
constexpr std::uint32_t RCC_CIR_LSERDYIE_POS   = UINT32_C(9);
constexpr std::uint32_t RCC_CIR_HSIRDYIE_MSK   = UINT32_C(0b00000000000000000000010000000000);
constexpr std::uint32_t RCC_CIR_HSIRDYIE_POS   = UINT32_C(10);
constexpr std::uint32_t RCC_CIR_HSERDYIE_MSK   = UINT32_C(0b00000000000000000000100000000000);
constexpr std::uint32_t RCC_CIR_HSERDYIE_POS   = UINT32_C(11);
constexpr std::uint32_t RCC_CIR_PLLRDYIE_MSK   = UINT32_C(0b00000000000000000001000000000000);
constexpr std::uint32_t RCC_CIR_PLLRDYIE_POS   = UINT32_C(12);
constexpr std::uint32_t RCC_CIR_HSI14RDYE_MSK  = UINT32_C(0b00000000000000000010000000000000);
constexpr std::uint32_t RCC_CIR_HSI14RDYE_POS  = UINT32_C(13);
constexpr std::uint32_t RCC_CIR_HSI48RDYIE_MSK = UINT32_C(0b00000000000000000100000000000000);
constexpr std::uint32_t RCC_CIR_HSI48RDYIE_POS = UINT32_C(14);
constexpr std::uint32_t RCC_CIR_LSIRDYC_MSK    = UINT32_C(0b00000000000000010000000000000000);
constexpr std::uint32_t RCC_CIR_LSIRDYC_POS    = UINT32_C(16);
constexpr std::uint32_t RCC_CIR_LSERDYC_MSK    = UINT32_C(0b00000000000000100000000000000000);
constexpr std::uint32_t RCC_CIR_LSERDYC_POS    = UINT32_C(17);
constexpr std::uint32_t RCC_CIR_HSIRDYC_MSK    = UINT32_C(0b00000000000001000000000000000000);
constexpr std::uint32_t RCC_CIR_HSIRDYC_POS    = UINT32_C(18);
constexpr std::uint32_t RCC_CIR_HSERDYC_MSK    = UINT32_C(0b00000000000010000000000000000000);
constexpr std::uint32_t RCC_CIR_HSERDYC_POS    = UINT32_C(19);
constexpr std::uint32_t RCC_CIR_PLLRDYC_MSK    = UINT32_C(0b00000000000100000000000000000000);
constexpr std::uint32_t RCC_CIR_PLLRDYC_POS    = UINT32_C(20);
constexpr std::uint32_t RCC_CIR_HSI14RDYC_MSK  = UINT32_C(0b00000000001000000000000000000000);
constexpr std::uint32_t RCC_CIR_HSI14RDYC_POS  = UINT32_C(21);
constexpr std::uint32_t RCC_CIR_HSI48RDYC_MSK  = UINT32_C(0b00000000010000000000000000000000);
constexpr std::uint32_t RCC_CIR_HSI48RDYC_POS  = UINT32_C(22);
constexpr std::uint32_t RCC_CIR_CSSC_MSK       = UINT32_C(0b00000000100000000000000000000000);
constexpr std::uint32_t RCC_CIR_CSSC_POS       = UINT32_C(23);
// APB2 peripheral reset register (RCC_APB2RSTR)
constexpr std::uint32_t RCC_APB2RSTR_SYSCFGRST_MSK  = UINT32_C(0b00000000000000000000000000000001);
constexpr std::uint32_t RCC_APB2RSTR_SYSCFGRST_POS  = UINT32_C(0);
constexpr std::uint32_t RCC_APB2RSTR_ADCRST_MSK     = UINT32_C(0b00000000000000000000001000000000);
constexpr std::uint32_t RCC_APB2RSTR_ADCRST_POS     = UINT32_C(9);
constexpr std::uint32_t RCC_APB2RSTR_TIM1RST_MSK    = UINT32_C(0b00000000000000000000100000000000);
constexpr std::uint32_t RCC_APB2RSTR_TIM1RST_POS    = UINT32_C(11);
constexpr std::uint32_t RCC_APB2RSTR_SPI1RST_MSK    = UINT32_C(0b00000000000000000001000000000000);
constexpr std::uint32_t RCC_APB2RSTR_SPI1RST_POS    = UINT32_C(12);
constexpr std::uint32_t RCC_APB2RSTR_USART1RST_MSK  = UINT32_C(0b00000000000000000100000000000000);
constexpr std::uint32_t RCC_APB2RSTR_USART1RST_POS  = UINT32_C(14);
constexpr std::uint32_t RCC_APB2RSTR_TIM15RST_MSK   = UINT32_C(0b00000000000000010000000000000000);
constexpr std::uint32_t RCC_APB2RSTR_TIM15RST_POS   = UINT32_C(16);
constexpr std::uint32_t RCC_APB2RSTR_TIM16RST_MSK   = UINT32_C(0b00000000000000100000000000000000);
constexpr std::uint32_t RCC_APB2RSTR_TIM16RST_POS   = UINT32_C(17);
constexpr std::uint32_t RCC_APB2RSTR_TIM17RST_MSK   = UINT32_C(0b00000000000001000000000000000000);
constexpr std::uint32_t RCC_APB2RSTR_TIM17RST_POS   = UINT32_C(18);
constexpr std::uint32_t RCC_APB2RSTR_DBGMCURST_MSK  = UINT32_C(0b00000000010000000000000000000000);
constexpr std::uint32_t RCC_APB2RSTR_DBGMCURST_POS  = UINT32_C(22);
// APB1 peripheral reset register (RCC_APB1RSTR)
constexpr std::uint32_t RCC_APB1RSTR_TIM3RST_MSK    = UINT32_C(0b00000000000000000000000000000010);
constexpr std::uint32_t RCC_APB1RSTR_TIM3RST_POS    = UINT32_C(1);
constexpr std::uint32_t RCC_APB1RSTR_TIM6RST_MSK    = UINT32_C(0b00000000000000000000000000010000);
constexpr std::uint32_t RCC_APB1RSTR_TIM6RST_POS    = UINT32_C(4);
constexpr std::uint32_t RCC_APB1RSTR_TIM7RST_MSK    = UINT32_C(0b00000000000000000000000000100000);
constexpr std::uint32_t RCC_APB1RSTR_TIM7RST_POS    = UINT32_C(5);
constexpr std::uint32_t RCC_APB1RSTR_TIM14RST_MSK   = UINT32_C(0b00000000000000000000000100000000);
constexpr std::uint32_t RCC_APB1RSTR_TIM14RST_POS   = UINT32_C(8);
constexpr std::uint32_t RCC_APB1RSTR_WWDGRST_MSK    = UINT32_C(0b00000000000000000000100000000000);
constexpr std::uint32_t RCC_APB1RSTR_WWDGRST_POS    = UINT32_C(11);
constexpr std::uint32_t RCC_APB1RSTR_SPI2RST_MSK    = UINT32_C(0b00000000000000000100000000000000);
constexpr std::uint32_t RCC_APB1RSTR_SPI2RST_POS    = UINT32_C(14);
constexpr std::uint32_t RCC_APB1RSTR_USART2RST_MSK  = UINT32_C(0b00000000000000100000000000000000);
constexpr std::uint32_t RCC_APB1RSTR_USART2RST_POS  = UINT32_C(17);
constexpr std::uint32_t RCC_APB1RSTR_USART3RST_MSK  = UINT32_C(0b00000000000001000000000000000000);
constexpr std::uint32_t RCC_APB1RSTR_USART3RST_POS  = UINT32_C(18);
constexpr std::uint32_t RCC_APB1RSTR_USART4RST_MSK  = UINT32_C(0b00000000000010000000000000000000);
constexpr std::uint32_t RCC_APB1RSTR_USART4RST_POS  = UINT32_C(19);
constexpr std::uint32_t RCC_APB1RSTR_USART5RST_MSK  = UINT32_C(0b00000000000100000000000000000000);
constexpr std::uint32_t RCC_APB1RSTR_USART5RST_POS  = UINT32_C(20);
constexpr std::uint32_t RCC_APB1RSTR_I2C1RST_MSK    = UINT32_C(0b00000000001000000000000000000000);
constexpr std::uint32_t RCC_APB1RSTR_I2C1RST_POS    = UINT32_C(21);
constexpr std::uint32_t RCC_APB1RSTR_I2C2RST_MSK    = UINT32_C(0b00000000010000000000000000000000);
constexpr std::uint32_t RCC_APB1RSTR_I2C2RST_POS    = UINT32_C(22);
constexpr std::uint32_t RCC_APB1RSTR_USBRST_MSK     = UINT32_C(0b00000000100000000000000000000000);
constexpr std::uint32_t RCC_APB1RSTR_USBRST_POS     = UINT32_C(23);
constexpr std::uint32_t RCC_APB1RSTR_PWRRST_MSK     = UINT32_C(0b00010000000000000000000000000000);
constexpr std::uint32_t RCC_APB1RSTR_PWRRST_POS     = UINT32_C(28);
// AHB Peripheral Clock enable register (RCC_AHBENR)
constexpr std::uint32_t RCC_AHBENR_DMA1EN_MSK     = UINT32_C(0b00000000000000000000000000000001);
constexpr std::uint32_t RCC_AHBENR_DMA1EN_POS     = UINT32_C(0);
constexpr std::uint32_t RCC_AHBENR_SRAMEN_MSK     = UINT32_C(0b00000000000000000000000000000100);
constexpr std::uint32_t RCC_AHBENR_SRAMEN_POS     = UINT32_C(2);
constexpr std::uint32_t RCC_AHBENR_FLITFEN_MSK    = UINT32_C(0b00000000000000000000000000010000);
constexpr std::uint32_t RCC_AHBENR_FLITFEN_POS    = UINT32_C(4);
constexpr std::uint32_t RCC_AHBENR_CRCEN_MSK      = UINT32_C(0b00000000000000000000000001000000);
constexpr std::uint32_t RCC_AHBENR_CRCEN_POS      = UINT32_C(6);
constexpr std::uint32_t RCC_AHBENR_IOPAEN_MSK     = UINT32_C(0b00000000000000100000000000000000);
constexpr std::uint32_t RCC_AHBENR_IOPAEN_POS     = UINT32_C(17);
constexpr std::uint32_t RCC_AHBENR_IOPBEN_MSK     = UINT32_C(0b00000000000001000000000000000000);
constexpr std::uint32_t RCC_AHBENR_IOPBEN_POS     = UINT32_C(18);
constexpr std::uint32_t RCC_AHBENR_IOPCEN_MSK     = UINT32_C(0b00000000000010000000000000000000);
constexpr std::uint32_t RCC_AHBENR_IOPCEN_POS     = UINT32_C(19);
constexpr std::uint32_t RCC_AHBENR_IOPFEN_MSK     = UINT32_C(0b00000000010000000000000000000000);
constexpr std::uint32_t RCC_AHBENR_IOPFEN_POS     = UINT32_C(22);
// APB2 peripheral clock enable register (RCC_APB2ENR)
constexpr std::uint32_t RCC_APB2ENR_SYSCFGEN_MSK   = UINT32_C(0b00000000000000000000000000000001);
constexpr std::uint32_t RCC_APB2ENR_SYSCFGEN_POS   = UINT32_C(0);
constexpr std::uint32_t RCC_APB2ENR_ADCEN_MSK      = UINT32_C(0b00000000000000000000001000000000);
constexpr std::uint32_t RCC_APB2ENR_ADCEN_POS      = UINT32_C(9);
constexpr std::uint32_t RCC_APB2ENR_TIM1EN_MSK     = UINT32_C(0b00000000000000000000100000000000);
constexpr std::uint32_t RCC_APB2ENR_TIM1EN_POS     = UINT32_C(11);
constexpr std::uint32_t RCC_APB2ENR_SPI1EN_MSK     = UINT32_C(0b00000000000000000001000000000000);
constexpr std::uint32_t RCC_APB2ENR_SPI1EN_POS     = UINT32_C(12);
constexpr std::uint32_t RCC_APB2ENR_USART1EN_MSK   = UINT32_C(0b00000000000000000100000000000000);
constexpr std::uint32_t RCC_APB2ENR_USART1EN_POS   = UINT32_C(14);
constexpr std::uint32_t RCC_APB2ENR_TIM15EN_MSK    = UINT32_C(0b00000000000000010000000000000000);
constexpr std::uint32_t RCC_APB2ENR_TIM15EN_POS    = UINT32_C(16);
constexpr std::uint32_t RCC_APB2ENR_TIM16EN_MSK    = UINT32_C(0b00000000000000100000000000000000);
constexpr std::uint32_t RCC_APB2ENR_TIM16EN_POS    = UINT32_C(17);
constexpr std::uint32_t RCC_APB2ENR_TIM17EN_MSK    = UINT32_C(0b00000000000001000000000000000000);
constexpr std::uint32_t RCC_APB2ENR_TIM17EN_POS    = UINT32_C(18);
constexpr std::uint32_t RCC_APB2ENR_DBGMCUEN_MSK   = UINT32_C(0b00000000010000000000000000000000);
constexpr std::uint32_t RCC_APB2ENR_DBGMCUEN_POS   = UINT32_C(22);
// APB1 peripheral clock enable register (RCC_APB1ENR)
constexpr std::uint32_t RCC_APB1ENR_TIM3EN_MSK     = UINT32_C(0b00000000000000000000000000000010);
constexpr std::uint32_t RCC_APB1ENR_TIM3EN_POS     = UINT32_C(1);
constexpr std::uint32_t RCC_APB1ENR_TIM6EN_MSK     = UINT32_C(0b00000000000000000000000000010000);
constexpr std::uint32_t RCC_APB1ENR_TIM6EN_POS     = UINT32_C(4);
constexpr std::uint32_t RCC_APB1ENR_TIM7EN_MSK     = UINT32_C(0b00000000000000000000000000100000);
constexpr std::uint32_t RCC_APB1ENR_TIM7EN_POS     = UINT32_C(5);
constexpr std::uint32_t RCC_APB1ENR_TIM14EN_MSK    = UINT32_C(0b00000000000000000000000100000000);
constexpr std::uint32_t RCC_APB1ENR_TIM14EN_POS    = UINT32_C(8);
constexpr std::uint32_t RCC_APB1ENR_WWDGEN_MSK     = UINT32_C(0b00000000000000000000100000000000);
constexpr std::uint32_t RCC_APB1ENR_WWDGEN_POS     = UINT32_C(11);
constexpr std::uint32_t RCC_APB1ENR_SPI2EN_MSK     = UINT32_C(0b00000000000000000100000000000000);
constexpr std::uint32_t RCC_APB1ENR_SPI2EN_POS     = UINT32_C(14);
constexpr std::uint32_t RCC_APB1ENR_USART2EN_MSK   = UINT32_C(0b00000000000000100000000000000000);
constexpr std::uint32_t RCC_APB1ENR_USART2EN_POS   = UINT32_C(17);
constexpr std::uint32_t RCC_APB1ENR_USART3EN_MSK   = UINT32_C(0b00000000000001000000000000000000);
constexpr std::uint32_t RCC_APB1ENR_USART3EN_POS   = UINT32_C(18);
constexpr std::uint32_t RCC_APB1ENR_USART4EN_MSK   = UINT32_C(0b00000000000010000000000000000000);
constexpr std::uint32_t RCC_APB1ENR_USART4EN_POS   = UINT32_C(19);
constexpr std::uint32_t RCC_APB1ENR_USART5EN_MSK   = UINT32_C(0b00000000000100000000000000000000);
constexpr std::uint32_t RCC_APB1ENR_USART5EN_POS   = UINT32_C(20);
constexpr std::uint32_t RCC_APB1ENR_I2C1EN_MSK     = UINT32_C(0b00000000001000000000000000000000);
constexpr std::uint32_t RCC_APB1ENR_I2C1EN_POS     = UINT32_C(21);
constexpr std::uint32_t RCC_APB1ENR_I2C2EN_MSK     = UINT32_C(0b00000000010000000000000000000000);
constexpr std::uint32_t RCC_APB1ENR_I2C2EN_POS     = UINT32_C(22);
constexpr std::uint32_t RCC_APB1ENR_USBRST_MSK     = UINT32_C(0b00000000100000000000000000000000);
constexpr std::uint32_t RCC_APB1ENR_USBRST_POS     = UINT32_C(23);
constexpr std::uint32_t RCC_APB1ENR_PWREN_MSK      = UINT32_C(0b00010000000000000000000000000000);
constexpr std::uint32_t RCC_APB1ENR_PWREN_POS      = UINT32_C(28);
// Backup domain control register (RCC_BDCR)
constexpr std::uint32_t RCC_BDCR_LSEON_MSK      = UINT32_C(0b00000000000000000000000000000001);
constexpr std::uint32_t RCC_BDCR_LSEON_POS      = UINT32_C(0);
constexpr std::uint32_t RCC_BDCR_LSERDY_MSK     = UINT32_C(0b00000000000000000000000000000010);
constexpr std::uint32_t RCC_BDCR_LSERDY_POS     = UINT32_C(1);
constexpr std::uint32_t RCC_BDCR_LSEBYP_MSK     = UINT32_C(0b00000000000000000000000000000100);
constexpr std::uint32_t RCC_BDCR_LSEBYP_POS     = UINT32_C(2);
constexpr std::uint32_t RCC_BDCR_LSEDRV_MSK     = UINT32_C(0b00000000000000000000000000011000);
constexpr std::uint32_t RCC_BDCR_LSEDRV_POS     = UINT32_C(3);
constexpr std::uint32_t RCC_BDCR_RTCSEL_MSK     = UINT32_C(0b00000000000000000000001100000000);
constexpr std::uint32_t RCC_BDCR_RTCSEL_POS     = UINT32_C(8);
constexpr std::uint32_t RCC_BDCR_RTCEN_MSK      = UINT32_C(0b00000000000000001000000000000000);
constexpr std::uint32_t RCC_BDCR_RTCEN_POS      = UINT32_C(15);
constexpr std::uint32_t RCC_BDCR_BDRST_MSK      = UINT32_C(0b00000000000000010000000000000000);
constexpr std::uint32_t RCC_BDCR_BDRST_POS      = UINT32_C(16);
// Control/status register (RCC_CSR)
constexpr std::uint32_t RCC_CSR_LSION_MSK      = UINT32_C(0b00000000000000000000000000000001);
constexpr std::uint32_t RCC_CSR_LSION_POS      = UINT32_C(0);
constexpr std::uint32_t RCC_CSR_LSIRDY_MSK     = UINT32_C(0b00000000000000000000000000000010);
constexpr std::uint32_t RCC_CSR_LSIRDY_POS     = UINT32_C(1);
constexpr std::uint32_t RCC_CSR_RMVF_MSK       = UINT32_C(0b00000001000000000000000000000000);
constexpr std::uint32_t RCC_CSR_RMVF_POS       = UINT32_C(24);
constexpr std::uint32_t RCC_CSR_OBLRSTF_MSK    = UINT32_C(0b00000010000000000000000000000000);
constexpr std::uint32_t RCC_CSR_OBLRSTF_POS    = UINT32_C(25);
constexpr std::uint32_t RCC_CSR_PINRSTF_MSK    = UINT32_C(0b00000100000000000000000000000000);
constexpr std::uint32_t RCC_CSR_PINRSTF_POS    = UINT32_C(26);
constexpr std::uint32_t RCC_CSR_PORRSTF_MSK    = UINT32_C(0b00001000000000000000000000000000);
constexpr std::uint32_t RCC_CSR_PORRSTF_POS    = UINT32_C(27);
constexpr std::uint32_t RCC_CSR_SFTRSTF_MSK    = UINT32_C(0b00010000000000000000000000000000);
constexpr std::uint32_t RCC_CSR_SFTRSTF_POS    = UINT32_C(28);
constexpr std::uint32_t RCC_CSR_IWDGRSTF_MSK   = UINT32_C(0b00100000000000000000000000000000);
constexpr std::uint32_t RCC_CSR_IWDGRSTF_POS   = UINT32_C(29);
constexpr std::uint32_t RCC_CSR_WWDGRSTF_MSK   = UINT32_C(0b01000000000000000000000000000000);
constexpr std::uint32_t RCC_CSR_WWDGRSTF_POS   = UINT32_C(30);
constexpr std::uint32_t RCC_CSR_LPWRRSTF_MSK   = UINT32_C(0b10000000000000000000000000000000);
constexpr std::uint32_t RCC_CSR_LPWRRSTF_POS   = UINT32_C(31);
// AHB peripheral reset register
constexpr std::uint32_t RCC_AHBRSTR_IOPARST_MSK    = UINT32_C(0b00000000000000100000000000000000);
constexpr std::uint32_t RCC_AHBRSTR_IOPARST_POS    = UINT32_C(17);
constexpr std::uint32_t RCC_AHBRSTR_IOPBRST_MSK    = UINT32_C(0b00000000000001000000000000000000);
constexpr std::uint32_t RCC_AHBRSTR_IOPBRST_POS    = UINT32_C(18);
constexpr std::uint32_t RCC_AHBRSTR_IOPCRST_MSK    = UINT32_C(0b00000000000010000000000000000000);
constexpr std::uint32_t RCC_AHBRSTR_IOPCRST_POS    = UINT32_C(19);
constexpr std::uint32_t RCC_AHBRSTR_IOPDRST_MSK    = UINT32_C(0b00000000000100000000000000000000);
constexpr std::uint32_t RCC_AHBRSTR_IOPDRST_POS    = UINT32_C(20);
constexpr std::uint32_t RCC_AHBRSTR_IOPFRST_MSK    = UINT32_C(0b00000000010000000000000000000000);
constexpr std::uint32_t RCC_AHBRSTR_IOPFRST_POS    = UINT32_C(22);
// Clock configuration register 2
constexpr std::uint32_t RCC_CFGR2_PREDIV_MSK     = UINT32_C(0b00000000000000000000000000001111);
constexpr std::uint32_t RCC_CFGR2_PREDIV_POS     = UINT32_C(0);
// Clock configuration register 3
constexpr std::uint32_t RCC_CFGR3_USART1SW_MSK   = UINT32_C(0b00000000000000000000000000000011);
constexpr std::uint32_t RCC_CFGR3_USART1SW_POS   = UINT32_C(0);
constexpr std::uint32_t RCC_CFGR3_I2C1SW_MSK     = UINT32_C(0b00000000000000000000000000010000);
constexpr std::uint32_t RCC_CFGR3_I2C1SW_POS     = UINT32_C(4);
constexpr std::uint32_t RCC_CFGR3_CECSW_MSK      = UINT32_C(0b00000000000000000000000001000000);
constexpr std::uint32_t RCC_CFGR3_CECSW_POS      = UINT32_C(6);
constexpr std::uint32_t RCC_CFGR3_USBSW_MSK      = UINT32_C(0b00000000000000000000000010000000);
constexpr std::uint32_t RCC_CFGR3_USBSW_POS      = UINT32_C(7);
constexpr std::uint32_t RCC_CFGR3_ADCSW_MSK      = UINT32_C(0b00000000000000000000000100000000);
constexpr std::uint32_t RCC_CFGR3_ADCSW_POS      = UINT32_C(8);
constexpr std::uint32_t RCC_CFGR3_USART2SW_MSK   = UINT32_C(0b00000000000000110000000000000000);
constexpr std::uint32_t RCC_CFGR3_USART2SW_POS   = UINT32_C(16);
// Clock control register 2
constexpr std::uint32_t RCC_CR2_HSI14ON_MSK    = UINT32_C(0b00000000000000000000000000000001);
constexpr std::uint32_t RCC_CR2_HSI14ON_POS    = UINT32_C(0);
constexpr std::uint32_t RCC_CR2_HSI14RDY_MSK   = UINT32_C(0b00000000000000000000000000000010);
constexpr std::uint32_t RCC_CR2_HSI14RDY_POS   = UINT32_C(1);
constexpr std::uint32_t RCC_CR2_HSI14DIS_MSK   = UINT32_C(0b00000000000000000000000000000100);
constexpr std::uint32_t RCC_CR2_HSI14DIS_POS   = UINT32_C(2);
constexpr std::uint32_t RCC_CR2_HSI14TRIM_MSK  = UINT32_C(0b00000000000000000000000011111000);
constexpr std::uint32_t RCC_CR2_HSI14TRIM_POS  = UINT32_C(3);
constexpr std::uint32_t RCC_CR2_HSI14CAL_MSK   = UINT32_C(0b00000000000000001111111100000000);
constexpr std::uint32_t RCC_CR2_HSI14CAL_POS   = UINT32_C(8);
constexpr std::uint32_t RCC_CR2_HSI48ON_MSK    = UINT32_C(0b00000000000000010000000000000000);
constexpr std::uint32_t RCC_CR2_HSI48ON_POS    = UINT32_C(16);
constexpr std::uint32_t RCC_CR2_HSI48RDY_MSK   = UINT32_C(0b00000000000000100000000000000000);
constexpr std::uint32_t RCC_CR2_HSI48RDY_POS   = UINT32_C(17);
constexpr std::uint32_t RCC_CR2_HSI48CAL_MSK   = UINT32_C(0b00000001000000000000000000000000);
constexpr std::uint32_t RCC_CR2_HSI48CAL_POS   = UINT32_C(24);


} /* namespace rcc */
} /* namespace hal */